#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PortalCliente.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PortalCliente")]
	public partial class PortalClienteDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCONFIG_Parameter(CONFIG_Parameter instance);
    partial void UpdateCONFIG_Parameter(CONFIG_Parameter instance);
    partial void DeleteCONFIG_Parameter(CONFIG_Parameter instance);
    partial void InsertCAT_DataType(CAT_DataType instance);
    partial void UpdateCAT_DataType(CAT_DataType instance);
    partial void DeleteCAT_DataType(CAT_DataType instance);
    partial void InsertSEG_User(SEG_User instance);
    partial void UpdateSEG_User(SEG_User instance);
    partial void DeleteSEG_User(SEG_User instance);
    partial void InsertOP_CustomerMessage(OP_CustomerMessage instance);
    partial void UpdateOP_CustomerMessage(OP_CustomerMessage instance);
    partial void DeleteOP_CustomerMessage(OP_CustomerMessage instance);
    partial void InsertCAT_Profile(CAT_Profile instance);
    partial void UpdateCAT_Profile(CAT_Profile instance);
    partial void DeleteCAT_Profile(CAT_Profile instance);
    #endregion
		
		public PortalClienteDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PortalClienteConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PortalClienteDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PortalClienteDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PortalClienteDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PortalClienteDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CONFIG_Parameter> CONFIG_Parameters
		{
			get
			{
				return this.GetTable<CONFIG_Parameter>();
			}
		}
		
		public System.Data.Linq.Table<CAT_DataType> CAT_DataTypes
		{
			get
			{
				return this.GetTable<CAT_DataType>();
			}
		}
		
		public System.Data.Linq.Table<SEG_User> SEG_Users
		{
			get
			{
				return this.GetTable<SEG_User>();
			}
		}
		
		public System.Data.Linq.Table<OP_CustomerMessage> OP_CustomerMessages
		{
			get
			{
				return this.GetTable<OP_CustomerMessage>();
			}
		}
		
		public System.Data.Linq.Table<CAT_Profile> CAT_Profiles
		{
			get
			{
				return this.GetTable<CAT_Profile>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONFIG_Parameter")]
	public partial class CONFIG_Parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _parameter_id;
		
		private string _parameter_name;
		
		private string _value;
		
		private int _dataType_id;
		
		private bool _enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onparameter_idChanging(int value);
    partial void Onparameter_idChanged();
    partial void Onparameter_nameChanging(string value);
    partial void Onparameter_nameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OndataType_idChanging(int value);
    partial void OndataType_idChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    #endregion
		
		public CONFIG_Parameter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parameter_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int parameter_id
		{
			get
			{
				return this._parameter_id;
			}
			set
			{
				if ((this._parameter_id != value))
				{
					this.Onparameter_idChanging(value);
					this.SendPropertyChanging();
					this._parameter_id = value;
					this.SendPropertyChanged("parameter_id");
					this.Onparameter_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parameter_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string parameter_name
		{
			get
			{
				return this._parameter_name;
			}
			set
			{
				if ((this._parameter_name != value))
				{
					this.Onparameter_nameChanging(value);
					this.SendPropertyChanging();
					this._parameter_name = value;
					this.SendPropertyChanged("parameter_name");
					this.Onparameter_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataType_id", DbType="Int NOT NULL")]
		public int dataType_id
		{
			get
			{
				return this._dataType_id;
			}
			set
			{
				if ((this._dataType_id != value))
				{
					this.OndataType_idChanging(value);
					this.SendPropertyChanging();
					this._dataType_id = value;
					this.SendPropertyChanged("dataType_id");
					this.OndataType_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabled", DbType="Bit NOT NULL")]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAT_DataType")]
	public partial class CAT_DataType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _dataType_id;
		
		private string _dataType_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndataType_idChanging(int value);
    partial void OndataType_idChanged();
    partial void OndataType_nameChanging(string value);
    partial void OndataType_nameChanged();
    #endregion
		
		public CAT_DataType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataType_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int dataType_id
		{
			get
			{
				return this._dataType_id;
			}
			set
			{
				if ((this._dataType_id != value))
				{
					this.OndataType_idChanging(value);
					this.SendPropertyChanging();
					this._dataType_id = value;
					this.SendPropertyChanged("dataType_id");
					this.OndataType_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataType_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string dataType_name
		{
			get
			{
				return this._dataType_name;
			}
			set
			{
				if ((this._dataType_name != value))
				{
					this.OndataType_nameChanging(value);
					this.SendPropertyChanging();
					this._dataType_name = value;
					this.SendPropertyChanged("dataType_name");
					this.OndataType_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SEG_User")]
	public partial class SEG_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _email;
		
		private System.Data.Linq.Binary _password;
		
		private string _firstName;
		
		private string _lastName;
		
		private int _profile_id;
		
		private bool _enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(System.Data.Linq.Binary value);
    partial void OnpasswordChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void Onprofile_idChanging(int value);
    partial void Onprofile_idChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    #endregion
		
		public SEG_User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_id", DbType="Int NOT NULL")]
		public int profile_id
		{
			get
			{
				return this._profile_id;
			}
			set
			{
				if ((this._profile_id != value))
				{
					this.Onprofile_idChanging(value);
					this.SendPropertyChanging();
					this._profile_id = value;
					this.SendPropertyChanged("profile_id");
					this.Onprofile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabled", DbType="Bit NOT NULL")]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OP_CustomerMessage")]
	public partial class OP_CustomerMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customerMessage_id;
		
		private string _customerEmail;
		
		private string _customerName;
		
		private string _customerLastName;
		
		private string _customerPhone01;
		
		private string _customerPhone2;
		
		private string _message;
		
		private bool _read;
		
		private System.Nullable<int> _userRead;
		
		private System.DateTime _createDate;
		
		private System.Nullable<System.DateTime> _readDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncustomerMessage_idChanging(int value);
    partial void OncustomerMessage_idChanged();
    partial void OncustomerEmailChanging(string value);
    partial void OncustomerEmailChanged();
    partial void OncustomerNameChanging(string value);
    partial void OncustomerNameChanged();
    partial void OncustomerLastNameChanging(string value);
    partial void OncustomerLastNameChanged();
    partial void OncustomerPhone01Changing(string value);
    partial void OncustomerPhone01Changed();
    partial void OncustomerPhone2Changing(string value);
    partial void OncustomerPhone2Changed();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OnreadChanging(bool value);
    partial void OnreadChanged();
    partial void OnuserReadChanging(System.Nullable<int> value);
    partial void OnuserReadChanged();
    partial void OncreateDateChanging(System.DateTime value);
    partial void OncreateDateChanged();
    partial void OnreadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnreadDateChanged();
    #endregion
		
		public OP_CustomerMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerMessage_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int customerMessage_id
		{
			get
			{
				return this._customerMessage_id;
			}
			set
			{
				if ((this._customerMessage_id != value))
				{
					this.OncustomerMessage_idChanging(value);
					this.SendPropertyChanging();
					this._customerMessage_id = value;
					this.SendPropertyChanged("customerMessage_id");
					this.OncustomerMessage_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerEmail", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string customerEmail
		{
			get
			{
				return this._customerEmail;
			}
			set
			{
				if ((this._customerEmail != value))
				{
					this.OncustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._customerEmail = value;
					this.SendPropertyChanged("customerEmail");
					this.OncustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string customerName
		{
			get
			{
				return this._customerName;
			}
			set
			{
				if ((this._customerName != value))
				{
					this.OncustomerNameChanging(value);
					this.SendPropertyChanging();
					this._customerName = value;
					this.SendPropertyChanged("customerName");
					this.OncustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerLastName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string customerLastName
		{
			get
			{
				return this._customerLastName;
			}
			set
			{
				if ((this._customerLastName != value))
				{
					this.OncustomerLastNameChanging(value);
					this.SendPropertyChanging();
					this._customerLastName = value;
					this.SendPropertyChanged("customerLastName");
					this.OncustomerLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerPhone01", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string customerPhone01
		{
			get
			{
				return this._customerPhone01;
			}
			set
			{
				if ((this._customerPhone01 != value))
				{
					this.OncustomerPhone01Changing(value);
					this.SendPropertyChanging();
					this._customerPhone01 = value;
					this.SendPropertyChanged("customerPhone01");
					this.OncustomerPhone01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerPhone2", DbType="VarChar(15)")]
		public string customerPhone2
		{
			get
			{
				return this._customerPhone2;
			}
			set
			{
				if ((this._customerPhone2 != value))
				{
					this.OncustomerPhone2Changing(value);
					this.SendPropertyChanging();
					this._customerPhone2 = value;
					this.SendPropertyChanged("customerPhone2");
					this.OncustomerPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[read]", Storage="_read", DbType="Bit NOT NULL")]
		public bool read
		{
			get
			{
				return this._read;
			}
			set
			{
				if ((this._read != value))
				{
					this.OnreadChanging(value);
					this.SendPropertyChanging();
					this._read = value;
					this.SendPropertyChanged("read");
					this.OnreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userRead", DbType="Int")]
		public System.Nullable<int> userRead
		{
			get
			{
				return this._userRead;
			}
			set
			{
				if ((this._userRead != value))
				{
					this.OnuserReadChanging(value);
					this.SendPropertyChanging();
					this._userRead = value;
					this.SendPropertyChanged("userRead");
					this.OnuserReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createDate", DbType="DateTime NOT NULL")]
		public System.DateTime createDate
		{
			get
			{
				return this._createDate;
			}
			set
			{
				if ((this._createDate != value))
				{
					this.OncreateDateChanging(value);
					this.SendPropertyChanging();
					this._createDate = value;
					this.SendPropertyChanged("createDate");
					this.OncreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_readDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> readDate
		{
			get
			{
				return this._readDate;
			}
			set
			{
				if ((this._readDate != value))
				{
					this.OnreadDateChanging(value);
					this.SendPropertyChanging();
					this._readDate = value;
					this.SendPropertyChanged("readDate");
					this.OnreadDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAT_Profile")]
	public partial class CAT_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _profile_id;
		
		private string _profile_name;
		
		private bool _enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprofile_idChanging(int value);
    partial void Onprofile_idChanged();
    partial void Onprofile_nameChanging(string value);
    partial void Onprofile_nameChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    #endregion
		
		public CAT_Profile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int profile_id
		{
			get
			{
				return this._profile_id;
			}
			set
			{
				if ((this._profile_id != value))
				{
					this.Onprofile_idChanging(value);
					this.SendPropertyChanging();
					this._profile_id = value;
					this.SendPropertyChanged("profile_id");
					this.Onprofile_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profile_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string profile_name
		{
			get
			{
				return this._profile_name;
			}
			set
			{
				if ((this._profile_name != value))
				{
					this.Onprofile_nameChanging(value);
					this.SendPropertyChanging();
					this._profile_name = value;
					this.SendPropertyChanged("profile_name");
					this.Onprofile_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabled", DbType="Bit NOT NULL")]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
